{"ast":null,"code":"import { API_BASE } from \"../config/env\";\nimport axios from \"axios\";\nexport const NEW_MOVIE_FULFILLED = \"NEW_MOVIE_FULFILLED\";\nexport const NEW_MOVIE_REJECTED = \"NEW_MOVIE_REJECTED\";\nexport const NEW_MOVIE_PENDING = \"NEW_MOVIE_PENDING\";\nexport const FETCH_MOVIE_FULFILLED = \"FETCH_MOVIE_FULFILLED\";\nexport const FETCH_MOVIE_REJECTED = \"FETCH_MOVIE_REJECTED\";\nexport const FETCH_MOVIE_PENDING = \"FETCH_MOVIE_PENDING\";\nexport const UPDATE_MOVIE_FULFILLED = \"UPDATE_MOVIE_FULFILLED\";\nexport const UPDATE_MOVIE_REJECTED = \"UPDATE_MOVIE_REJECTED\";\nexport const UPDATE_MOVIE_PENDING = \"UPDATE_MOVIE_PENDING\";\nexport function onNewMovieSubmit({\n  title,\n  cover\n}) {\n  return dispatch => {\n    dispatch({\n      type: \"NEW_MOVIE\",\n      payload: axios.post(`${API_BASE}/movies`, {\n        title,\n        cover\n      })\n    });\n  };\n}\nexport function fetchMovie(id) {\n  return dispatch => {\n    dispatch({\n      type: \"FETCH_MOVIE\",\n      payload: axios.get(`${API_BASE}/movies/${id}`).then(result => result.data)\n    });\n  };\n}\nexport function onUpdateMovieSubmit({\n  _id,\n  title,\n  cover\n}) {\n  return dispatch => {\n    dispatch({\n      type: \"NEW_MOVIE\",\n      payload: axios.put(`${API_BASE}/movies/${_id}`, {\n        title,\n        cover\n      })\n    });\n  };\n}","map":{"version":3,"sources":["/Users/zafergok/Documents/GitHub/react-redux/src/actions/newMovie.js"],"names":["API_BASE","axios","NEW_MOVIE_FULFILLED","NEW_MOVIE_REJECTED","NEW_MOVIE_PENDING","FETCH_MOVIE_FULFILLED","FETCH_MOVIE_REJECTED","FETCH_MOVIE_PENDING","UPDATE_MOVIE_FULFILLED","UPDATE_MOVIE_REJECTED","UPDATE_MOVIE_PENDING","onNewMovieSubmit","title","cover","dispatch","type","payload","post","fetchMovie","id","get","then","result","data","onUpdateMovieSubmit","_id","put"],"mappings":"AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA1B,EAA4C;AACjD,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,OAAO,EAAEf,KAAK,CAACgB,IAAN,CAAY,GAAEjB,QAAS,SAAvB,EAAiC;AACxCY,QAAAA,KADwC;AAExCC,QAAAA;AAFwC,OAAjC;AAFF,KAAD,CAAR;AAOD,GARD;AASD;AAED,OAAO,SAASK,UAAT,CAAoBC,EAApB,EAAwB;AAC7B,SAAQL,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEf,KAAK,CACXmB,GADM,CACD,GAAEpB,QAAS,WAAUmB,EAAG,EADvB,EAENE,IAFM,CAEAC,MAAD,IAAYA,MAAM,CAACC,IAFlB;AAFF,KAAD,CAAR;AAMD,GAPD;AAQD;AAED,OAAO,SAASC,mBAAT,CAA6B;AAAEC,EAAAA,GAAF;AAAOb,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAA7B,EAAoD;AACzD,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,OAAO,EAAEf,KAAK,CAACyB,GAAN,CAAW,GAAE1B,QAAS,WAAUyB,GAAI,EAApC,EAAuC;AAC9Cb,QAAAA,KAD8C;AAE9CC,QAAAA;AAF8C,OAAvC;AAFF,KAAD,CAAR;AAOD,GARD;AASD","sourcesContent":["import { API_BASE } from \"../config/env\";\nimport axios from \"axios\";\n\nexport const NEW_MOVIE_FULFILLED = \"NEW_MOVIE_FULFILLED\";\nexport const NEW_MOVIE_REJECTED = \"NEW_MOVIE_REJECTED\";\nexport const NEW_MOVIE_PENDING = \"NEW_MOVIE_PENDING\";\n\nexport const FETCH_MOVIE_FULFILLED = \"FETCH_MOVIE_FULFILLED\";\nexport const FETCH_MOVIE_REJECTED = \"FETCH_MOVIE_REJECTED\";\nexport const FETCH_MOVIE_PENDING = \"FETCH_MOVIE_PENDING\";\n\nexport const UPDATE_MOVIE_FULFILLED = \"UPDATE_MOVIE_FULFILLED\";\nexport const UPDATE_MOVIE_REJECTED = \"UPDATE_MOVIE_REJECTED\";\nexport const UPDATE_MOVIE_PENDING = \"UPDATE_MOVIE_PENDING\";\n\nexport function onNewMovieSubmit({ title, cover }) {\n  return (dispatch) => {\n    dispatch({\n      type: \"NEW_MOVIE\",\n      payload: axios.post(`${API_BASE}/movies`, {\n        title,\n        cover,\n      }),\n    });\n  };\n}\n\nexport function fetchMovie(id) {\n  return (dispatch) => {\n    dispatch({\n      type: \"FETCH_MOVIE\",\n      payload: axios\n        .get(`${API_BASE}/movies/${id}`)\n        .then((result) => result.data),\n    });\n  };\n}\n\nexport function onUpdateMovieSubmit({ _id, title, cover }) {\n  return (dispatch) => {\n    dispatch({\n      type: \"NEW_MOVIE\",\n      payload: axios.put(`${API_BASE}/movies/${_id}`, {\n        title,\n        cover,\n      }),\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}