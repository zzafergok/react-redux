{"ast":null,"code":"var _jsxFileName = \"/Users/zafergok/Documents/GitHub/react-redux/Section-16/mainfolder/src/components/pages/MoviesList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"semantic-ui-react\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport MovieCard from \"../MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MoviesList = ({\n  movies,\n  deleteMovie\n}) => {\n  const emptyMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"g\\xF6sterecek bir \\u015Fey yok.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 24\n  }, this);\n\n  const fullMoviesList = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      stackable: true,\n      columns: 3,\n      children: movies.movieList.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        deleteMovie: deleteMovie\n      }, movie._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PacmanLoader, {\n      color: \"#14151d\",\n      loading: movies.fetching,\n      size: 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.length === 0 ? emptyMessage : fullMoviesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = MoviesList;\nMoviesList.propTypes = {\n  movies: PropTypes.shape({\n    movieList: PropTypes.array.isRequired\n  }).isRequired\n};\nexport default MoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"sources":["/Users/zafergok/Documents/GitHub/react-redux/Section-16/mainfolder/src/components/pages/MoviesList.js"],"names":["React","PropTypes","Grid","PacmanLoader","MovieCard","MoviesList","movies","deleteMovie","emptyMessage","fullMoviesList","movieList","map","movie","_id","fetching","length","propTypes","shape","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAC9C,QAAMC,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AACA,QAAMC,cAAc,gBAClB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACGH,MAAM,CAACI,SAAP,CAAiBC,GAAjB,CAAsBC,KAAD,iBACpB,QAAC,SAAD;AAA2B,QAAA,KAAK,EAAEA,KAAlC;AAAyC,QAAA,WAAW,EAAEL;AAAtD,SAAgBK,KAAK,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE,SAArB;AAAgC,MAAA,OAAO,EAAEP,MAAM,CAACQ,QAAhD;AAA0D,MAAA,IAAI,EAAE;AAAhE;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBAAMR,MAAM,CAACS,MAAP,KAAkB,CAAlB,GAAsBP,YAAtB,GAAqCC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CAnBD;;KAAMJ,U;AAqBNA,UAAU,CAACW,SAAX,GAAuB;AACrBV,EAAAA,MAAM,EAAEL,SAAS,CAACgB,KAAV,CAAgB;AACtBP,IAAAA,SAAS,EAAET,SAAS,CAACiB,KAAV,CAAgBC;AADL,GAAhB,EAELA;AAHkB,CAAvB;AAMA,eAAed,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid } from \"semantic-ui-react\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\n\nimport MovieCard from \"../MovieCard\";\n\nconst MoviesList = ({ movies, deleteMovie }) => {\n  const emptyMessage = <p>gösterecek bir şey yok.</p>;\n  const fullMoviesList = (\n    <div>\n      <Grid stackable columns={3}>\n        {movies.movieList.map((movie) => (\n          <MovieCard key={movie._id} movie={movie} deleteMovie={deleteMovie} />\n        ))}\n      </Grid>\n    </div>\n  );\n\n  return (\n    <>\n      <PacmanLoader color={\"#14151d\"} loading={movies.fetching} size={30} />\n\n      <div>{movies.length === 0 ? emptyMessage : fullMoviesList}</div>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.shape({\n    movieList: PropTypes.array.isRequired,\n  }).isRequired,\n};\n\nexport default MoviesList;\n"]},"metadata":{},"sourceType":"module"}