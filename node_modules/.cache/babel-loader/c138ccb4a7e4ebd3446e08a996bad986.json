{"ast":null,"code":"var _jsxFileName = \"/Users/zafergok/Documents/GitHub/react-redux/src/components/NewMovieForm.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Image, Message } from \"semantic-ui-react\";\nimport InlineError from \"./InlineError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class NewMovieForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _id: this.props.movie ? this.props.movie._id : \"\",\n      title: this.props.movie ? this.props.movie.title : \"\",\n      cover: this.props.movie ? this.props.movie.cover : \"\",\n      errors: {},\n      redirect: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validate = () => {\n      const errors = {};\n      if (!this.state.title) errors.title = \"Can't be blank\";\n      if (!this.state.cover) errors.cover = \"Can't be blank\";\n      return errors;\n    };\n\n    this.onSubmit = () => {\n      const errors = this.validate();\n      this.setState({\n        errors,\n        redirect: true\n      });\n\n      const _id = this.state._id || this.props.newMovie.movie_id;\n\n      if (Object.keys(errors).length === 0) {\n        if (!_id) {\n          this.props.onNewMovieSubmit(this.state);\n        } else {\n          this.props.onUpdateMovieSubmit({ ...this.state,\n            _id\n          });\n        }\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      movie\n    } = nextProps.newMovie;\n\n    if (movie.title && movie.title !== this.state.title) {\n      this.setState({\n        title: movie.title,\n        cover: movie.cover\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n\n    const form = /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      loading: this.props.newMovie.fetching || this.props.newMovie.movie.fetching,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        error: !!errors.title,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), errors.title && /*#__PURE__*/_jsxDEV(InlineError, {\n          message: errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          name: \"title\",\n          value: this.state.title,\n          onChange: this.handleChange,\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        error: !!errors.cover,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), errors.cover && /*#__PURE__*/_jsxDEV(InlineError, {\n          message: errors.cover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cover\",\n          name: \"cover\",\n          value: this.state.cover,\n          onChange: this.handleChange,\n          placeholder: \"Cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        src: this.state.cover,\n        size: \"small\",\n        wrapped: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clearfix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ui black basic button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), this.props.newMovie.error.response && /*#__PURE__*/_jsxDEV(Message, {\n        negative: true,\n        children: [/*#__PURE__*/_jsxDEV(Message.Header, {\n          children: \"We're Sorry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A problem occured while recording.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.props.newMovie.done && this.state.redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : form\n    }, void 0, false);\n  }\n\n}\nNewMovieForm.propTypes = {\n  onNewMovieSubmit: PropTypes.func.isRequired\n};\nexport default NewMovieForm;","map":{"version":3,"sources":["/Users/zafergok/Documents/GitHub/react-redux/src/components/NewMovieForm.js"],"names":["React","Component","PropTypes","Redirect","Form","Image","Message","InlineError","NewMovieForm","state","_id","props","movie","title","cover","errors","redirect","handleChange","e","setState","target","name","value","validate","onSubmit","newMovie","movie_id","Object","keys","length","onNewMovieSubmit","onUpdateMovieSubmit","componentWillReceiveProps","nextProps","render","form","fetching","error","response","done","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Image, Message } from \"semantic-ui-react\";\n\nimport InlineError from \"./InlineError\";\n\nexport class NewMovieForm extends Component {\n  state = {\n    _id: this.props.movie ? this.props.movie._id : \"\",\n    title: this.props.movie ? this.props.movie.title : \"\",\n    cover: this.props.movie ? this.props.movie.cover : \"\",\n    errors: {},\n    redirect: false,\n  };\n\n  static propTypes = {\n    onNewMovieSubmit: PropTypes.func.isRequired,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { movie } = nextProps.newMovie;\n    if (movie.title && movie.title !== this.state.title) {\n      this.setState({\n        title: movie.title,\n        cover: movie.cover,\n      });\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  validate = () => {\n    const errors = {};\n    if (!this.state.title) errors.title = \"Can't be blank\";\n    if (!this.state.cover) errors.cover = \"Can't be blank\";\n    return errors;\n  };\n\n  onSubmit = () => {\n    const errors = this.validate();\n    this.setState({\n      errors,\n      redirect: true,\n    });\n\n    const _id = this.state._id || this.props.newMovie.movie_id;\n\n    if (Object.keys(errors).length === 0) {\n      if (!_id) {\n        this.props.onNewMovieSubmit(this.state);\n      } else {\n        this.props.onUpdateMovieSubmit({ ...this.state, _id });\n      }\n    }\n  };\n  render() {\n    const { errors } = this.state;\n    const form = (\n      <Form\n        onSubmit={this.onSubmit}\n        loading={\n          this.props.newMovie.fetching || this.props.newMovie.movie.fetching\n        }\n      >\n        <Form.Field error={!!errors.title}>\n          <label>Title</label>\n          {errors.title && <InlineError message={errors.title} />}\n          <input\n            id=\"title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            placeholder=\"Title\"\n          />\n        </Form.Field>\n        <Form.Field error={!!errors.cover}>\n          <label>Cover</label>\n          {errors.cover && <InlineError message={errors.cover} />}\n          <input\n            id=\"cover\"\n            name=\"cover\"\n            value={this.state.cover}\n            onChange={this.handleChange}\n            placeholder=\"Cover\"\n          />\n        </Form.Field>\n        <Image src={this.state.cover} size=\"small\" wrapped />\n        <div className=\"clearfix\" />\n        <button type=\"submit\" className=\"ui black basic button\">\n          Submit\n        </button>\n\n        {this.props.newMovie.error.response && (\n          <Message negative>\n            <Message.Header>We're Sorry</Message.Header>\n            <p>A problem occured while recording.</p>\n          </Message>\n        )}\n      </Form>\n    );\n    return (\n      <>\n        {this.props.newMovie.done && this.state.redirect ? (\n          <Redirect to=\"/movies\" />\n        ) : (\n          form\n        )}\n      </>\n    );\n  }\n}\n\nexport default NewMovieForm;\n"]},"metadata":{},"sourceType":"module"}