{"ast":null,"code":"import { NEW_MOVIE_FULFILLED, NEW_MOVIE_REJECTED, NEW_MOVIE_PENDING, FETCH_MOVIE_FULFILLED, FETCH_MOVIE_REJECTED, FETCH_MOVIE_PENDING, UPDATE_MOVIE_FULFILLED, UPDATE_MOVIE_REJECTED, UPDATE_MOVIE_PENDING } from \"../actions/newMovie\";\nconst initialState = {\n  fetching: false,\n  done: false,\n  error: {},\n  movie: {\n    fetching: false\n  }\n}; // eslint-disable-next-line\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case NEW_MOVIE_PENDING:\n      return { ...state,\n        fetching: true\n      };\n\n    case NEW_MOVIE_FULFILLED:\n      return { ...state,\n        fetching: false,\n        done: true\n      };\n\n    case NEW_MOVIE_REJECTED:\n      return { ...state,\n        error: action.payload,\n        fetching: false\n      };\n    // FETCH_MOVIE\n\n    case FETCH_MOVIE_PENDING:\n      return { ...state,\n        movie: {\n          fetching: true\n        }\n      };\n\n    case FETCH_MOVIE_FULFILLED:\n      return { ...state,\n        movie: { ...action.payload.movie,\n          fetching: false\n        }\n      };\n\n    case FETCH_MOVIE_REJECTED:\n      return { ...state,\n        movie: {\n          fetching: false\n        }\n      };\n    // UPDATE_MOVIE\n\n    case UPDATE_MOVIE_PENDING:\n      return { ...state,\n        movie: {\n          fetching: true\n        }\n      };\n\n    case UPDATE_MOVIE_FULFILLED:\n      return { ...state,\n        movie: {\n          fetching: false\n        }\n      };\n\n    case UPDATE_MOVIE_REJECTED:\n      return { ...state,\n        movie: {\n          fetching: false\n        }\n      };\n\n    default:\n      return state; // eslint-disable-next-line\n\n      break;\n  }\n});","map":{"version":3,"sources":["/Users/zafergok/Documents/GitHub/react-redux/src/reducers/newMovie.js"],"names":["NEW_MOVIE_FULFILLED","NEW_MOVIE_REJECTED","NEW_MOVIE_PENDING","FETCH_MOVIE_FULFILLED","FETCH_MOVIE_REJECTED","FETCH_MOVIE_PENDING","UPDATE_MOVIE_FULFILLED","UPDATE_MOVIE_REJECTED","UPDATE_MOVIE_PENDING","initialState","fetching","done","error","movie","state","action","type","payload"],"mappings":"AAAA,SACEA,mBADF,EAEEC,kBAFF,EAGEC,iBAHF,EAIEC,qBAJF,EAKEC,oBALF,EAMEC,mBANF,EAOEC,sBAPF,EAQEC,qBARF,EASEC,oBATF,QAUO,qBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,KADS;AAEnBC,EAAAA,IAAI,EAAE,KAFa;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,KAAK,EAAE;AACLH,IAAAA,QAAQ,EAAE;AADL;AAJY,CAArB,C,CASA;;AACA,gBAAe,CAACI,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,iBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKV,mBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,QAAQ,EAAE,KAFL;AAGLC,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKV,kBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFT;AAGLP,QAAAA,QAAQ,EAAE;AAHL,OAAP;AAMF;;AACA,SAAKL,mBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,KAAK,EAAE;AACLH,UAAAA,QAAQ,EAAE;AADL;AAFF,OAAP;;AAMF,SAAKP,qBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELD,QAAAA,KAAK,EAAE,EACL,GAAGE,MAAM,CAACE,OAAP,CAAeJ,KADb;AAELH,UAAAA,QAAQ,EAAE;AAFL;AAFF,OAAP;;AAOF,SAAKN,oBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELD,QAAAA,KAAK,EAAE;AACLH,UAAAA,QAAQ,EAAE;AADL;AAFF,OAAP;AAOF;;AACA,SAAKF,oBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELD,QAAAA,KAAK,EAAE;AACLH,UAAAA,QAAQ,EAAE;AADL;AAFF,OAAP;;AAMF,SAAKJ,sBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELD,QAAAA,KAAK,EAAE;AACLH,UAAAA,QAAQ,EAAE;AADL;AAFF,OAAP;;AAMF,SAAKH,qBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELD,QAAAA,KAAK,EAAE;AACLH,UAAAA,QAAQ,EAAE;AADL;AAFF,OAAP;;AAMF;AACE,aAAOI,KAAP,CADF,CAEE;;AACA;AApEJ;AAsED,CAvED","sourcesContent":["import {\n  NEW_MOVIE_FULFILLED,\n  NEW_MOVIE_REJECTED,\n  NEW_MOVIE_PENDING,\n  FETCH_MOVIE_FULFILLED,\n  FETCH_MOVIE_REJECTED,\n  FETCH_MOVIE_PENDING,\n  UPDATE_MOVIE_FULFILLED,\n  UPDATE_MOVIE_REJECTED,\n  UPDATE_MOVIE_PENDING,\n} from \"../actions/newMovie\";\n\nconst initialState = {\n  fetching: false,\n  done: false,\n  error: {},\n  movie: {\n    fetching: false,\n  },\n};\n\n// eslint-disable-next-line\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case NEW_MOVIE_PENDING:\n      return {\n        ...state,\n        fetching: true,\n      };\n    case NEW_MOVIE_FULFILLED:\n      return {\n        ...state,\n        fetching: false,\n        done: true,\n      };\n    case NEW_MOVIE_REJECTED:\n      return {\n        ...state,\n        error: action.payload,\n        fetching: false,\n      };\n\n    // FETCH_MOVIE\n    case FETCH_MOVIE_PENDING:\n      return {\n        ...state,\n        movie: {\n          fetching: true,\n        },\n      };\n    case FETCH_MOVIE_FULFILLED:\n      return {\n        ...state,\n        movie: {\n          ...action.payload.movie,\n          fetching: false,\n        },\n      };\n    case FETCH_MOVIE_REJECTED:\n      return {\n        ...state,\n        movie: {\n          fetching: false,\n        },\n      };\n\n    // UPDATE_MOVIE\n    case UPDATE_MOVIE_PENDING:\n      return {\n        ...state,\n        movie: {\n          fetching: true,\n        },\n      };\n    case UPDATE_MOVIE_FULFILLED:\n      return {\n        ...state,\n        movie: {\n          fetching: false,\n        },\n      };\n    case UPDATE_MOVIE_REJECTED:\n      return {\n        ...state,\n        movie: {\n          fetching: false,\n        },\n      };\n    default:\n      return state;\n      // eslint-disable-next-line\n      break;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}