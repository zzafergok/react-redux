{"ast":null,"code":"var _jsxFileName = \"/Users/zafergok/Documents/GitHub/react-redux/src/components/pages/NewMoviePage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { onNewMovieSubmit, fetchMovie, onUpdateMovieSubmit } from \"../../actions/newMovie\";\nimport NewMovieForm from \"../NewMovieForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NewMoviePage extends Component {\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n\n    if (!this.props.movie && match.params._id) {\n      this.props.fetchMovie(match.params._id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewMovieForm, {\n        movie: this.props.movie,\n        newMovie: this.props.newMovie,\n        onNewMovieSubmit: this.props.onNewMovieSubmit,\n        onUpdateMovieSubmit: this.props.onUpdateMovieSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  newMovie,\n  movies\n}, props) => {\n  return {\n    newMovie,\n    movie: movies.movieList.find(item => item._id === props.match.params._id)\n  };\n};\n\nconst mapDispatchToProps = {\n  onNewMovieSubmit,\n  fetchMovie,\n  onUpdateMovieSubmit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMoviePage);","map":{"version":3,"sources":["/Users/zafergok/Documents/GitHub/react-redux/src/components/pages/NewMoviePage.js"],"names":["React","Component","connect","onNewMovieSubmit","fetchMovie","onUpdateMovieSubmit","NewMovieForm","NewMoviePage","componentDidMount","match","props","movie","params","_id","render","newMovie","mapStateToProps","movies","movieList","find","item","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,gBADF,EAEEC,UAFF,EAGEC,mBAHF,QAIO,wBAJP;AAMA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,OAAO,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAC1CO,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;;AACA,QAAI,CAAC,KAAKA,KAAL,CAAWC,KAAZ,IAAqBF,KAAK,CAACG,MAAN,CAAaC,GAAtC,EAA2C;AACzC,WAAKH,KAAL,CAAWN,UAAX,CAAsBK,KAAK,CAACG,MAAN,CAAaC,GAAnC;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KADpB;AAEE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWK,QAFvB;AAGE,QAAA,gBAAgB,EAAE,KAAKL,KAAL,CAAWP,gBAH/B;AAIE,QAAA,mBAAmB,EAAE,KAAKO,KAAL,CAAWL;AAJlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AApByC;;AAuB5C,MAAMW,eAAe,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAAD,EAAuBP,KAAvB,KAAiC;AACvD,SAAO;AACLK,IAAAA,QADK;AAELJ,IAAAA,KAAK,EAAEM,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAuBC,IAAD,IAAUA,IAAI,CAACP,GAAL,KAAaH,KAAK,CAACD,KAAN,CAAYG,MAAZ,CAAmBC,GAAhE;AAFF,GAAP;AAID,CALD;;AAOA,MAAMQ,kBAAkB,GAAG;AACzBlB,EAAAA,gBADyB;AAEzBC,EAAAA,UAFyB;AAGzBC,EAAAA;AAHyB,CAA3B;AAMA,eAAeH,OAAO,CAACc,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cd,YAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  onNewMovieSubmit,\n  fetchMovie,\n  onUpdateMovieSubmit,\n} from \"../../actions/newMovie\";\n\nimport NewMovieForm from \"../NewMovieForm\";\n\nexport class NewMoviePage extends Component {\n  componentDidMount() {\n    const { match } = this.props;\n    if (!this.props.movie && match.params._id) {\n      this.props.fetchMovie(match.params._id);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>New Movie</h2>\n        <NewMovieForm\n          movie={this.props.movie}\n          newMovie={this.props.newMovie}\n          onNewMovieSubmit={this.props.onNewMovieSubmit}\n          onUpdateMovieSubmit={this.props.onUpdateMovieSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ newMovie, movies }, props) => {\n  return {\n    newMovie,\n    movie: movies.movieList.find((item) => item._id === props.match.params._id),\n  };\n};\n\nconst mapDispatchToProps = {\n  onNewMovieSubmit,\n  fetchMovie,\n  onUpdateMovieSubmit,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMoviePage);\n"]},"metadata":{},"sourceType":"module"}